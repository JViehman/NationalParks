TQQPlot(as.numeric(yt), df = 3.59)
load("./.RData")
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("~/datasets/datasets/Stock_Bond.csv")
attach(dat)
head(dat, n = 3)
n = dim(dat) [1]
GMReturn = GM_AC[-1] / GM_AC[-n]-1
FReturn = F_AC[-1] / F_AC[-n]-1
par(mfrow = c(1, 1))
cor(FReturn, GMReturn)
plot(GMReturn, FReturn, main = "Ford and General Motors Returns", xlab = "GM Daily Returns", ylab = "Ford Daily Returns")
logGM = log(GM_AC[-1]/GM_AC[-n])
cor(logGM, GMReturn)
plot(GMReturn, logGM, main = "General Motors Daily Returns and Log Returns", xlab = "GM Daily Returns", ylab = "GM Log Daily Returns")
library(quantmod)
options("getSymbols.yahoo.warning"=FALSE)
getSymbols("MSFT", from = "2009-08-01", to ="2019-08-01")
getSymbols("MRK", from = "2009-08-01", to ="2019-08-01")
head(MSFT, n = 3)
head(MRK, n = 3)
plot(cbind(Ad(MSFT), Ad(MRK)), legend.loc = "topleft", main = "Microsoft and Merck Adjusted Closing Prices")
cor (Ad(MSFT), Ad(MRK))
MRKReturn = dailyReturn(MRK, leading = F)
logMRK = dailyReturn(MRK, type = "log", leading = F)
logMSFT = dailyReturn(MSFT, type = "log", leading = F)
MSFTReturn = dailyReturn(MSFT, leading = F)
MRKReturn = as.vector(MRKReturn[-1])
MSFTReturn = as.vector(MSFTReturn[-1])
logMRK = as.vector(logMRK[-1])
logMSFT = as.vector(logMSFT[-1])
cor(MRKReturn, MSFTReturn)
plot(MRKReturn, MSFTReturn, main = "Merck and Microsoft Daily Returns", xlab = "Merck Daily Returns", ylab = "Microsoft Daily Returns")
plot(MRKReturn, logMRK, main = "Comparison of Merck Returns and Log Returns", xlab = "Daily Returns", ylab = "Log Daily Returns")
cor(MRKReturn, logMRK)
plot(MSFTReturn, logMSFT, main = "Comparison of Microsoft Returns and Log Returns", xlab = "Daily Returns", ylab = "Log Daily Returns")
cor(MSFTReturn, logMSFT)
rm(list=ls(all=TRUE))
niter = 1e5
below = rep(0,niter)
set.seed(2009)
options(warn=-1)
for (i in 1:niter)
{
r = rnorm(100,mean=.05/253,sd=.23/sqrt(253))
logPrice = log(1e6) + cumsum(r)
minlogP = min(logPrice)
below[i] = as.numeric(minlogP < log(950000))
}
mean(below)
set.seed(2012)
n = 253
par(mfrow=c(3,3))
for (i in (1:9))
{
logr = rnorm(n,0.05/253,0.2/sqrt(253))
price = c(120,120*exp(cumsum(logr)))
plot(price,type="l", main = "Price")
plot(logr, type="l", main = "Log Returns")
}
mean(logr)
sd(logr)
0.05/253
0.2/sqrt(253)
MCD_PriceDaily <- read.csv("~/datasets/datasets/MCD_PriceDaily.csv")
price = MCD_PriceDaily[,7]
n = dim(MCD_PriceDaily)[1]
n
McDReturn = price[-1]/ price[-n] - 1
logMac = log(price[-1]/price[-n])
head(McDReturn, n = 3)
head(logMac, n = 3)
cor(McDReturn, logMac)
plot(McDReturn, logMac, type = "l", main= "McDonald's Returns and Log Returns", xlab = "Returns", ylab = "Log Returns")
mean(McDReturn)
mean(logMac)
sd(McDReturn)
sd(logMac)
t.test(McDReturn, logMac, paired = TRUE, alternative = "two.sided")
shapiro.test(price)
shapiro.test(McDReturn)
shapiro.test(logMac)
log(990/1000)
pnorm(-0.01005034, 0.001, 0.015)
var = (0.015^2)*5
pnorm(-0.01005034, (0.001*5), sqrt(var))
1 - pnorm(log(110/100), 0.1, 0.2)
var= (0.15^2)*2
1-pnorm(log(90/80), (0.08*2), sqrt(var))
price = c(95, 103, 98)
return = price[-1]/ price[-3] - 1
(98/103)*(103/95)
return
shiny::runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
knitr::opts_chunk$set(echo = TRUE)
load("~/GitHub/national_parks/Data Files/testdata.RData")
load("~/GitHub/national_parks/Data Files/ShinyApp/nps.RData")
load("~/GitHub/national_parks/ShinyApp/nps.RData")
View(nps)
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
runApp('~/GitHub/national_parks/ShinyApp')
shiny::runApp()
